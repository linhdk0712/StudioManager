@model StudioApplication.Areas.SysAdmin.Models.NewStudioViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<div class="w3-panel w3-pink">
    <h4>Thêm mới ảnh viện</h4>
</div>
<div class="w3-card-4">
    @using (Html.BeginForm("Create", "SysAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="w3-container">
       <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @*Columm 1*@
            <div class="col-lg-6">
                <div class="text-danger form-group">
                    @ViewBag.message
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StudioCode, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.StudioCode, new {htmlAttributes = new {@class = "form-control", @id = "CheckStudioValue"}})
                        @Html.ValidationMessageFor(model => model.StudioCode, "", new {@class = "text-danger"})
                    </div>
                    <div>
                        <a class="btn btn-danger" onclick="CheckStudioExits()" id="btnCheck">Kiểm tra</a>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StudioName, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.StudioName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.StudioName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SkypeName, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.SkypeName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.SkypeName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-lg-7">
                        <input type="file" name="logo" class="form-control"/>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new {@class = "control-label col-lg-3"})
                    <div class="col-sm-offset-1 col-lg-7">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-offset-3 col-lg-7">
                        <input type="submit" value="Lưu thông tin" class="w3-btn w3-green form-control"/>
                    </div>
                </div>
            </div>
            @*Columm 2*@
            <div class="col-lg-6">
            </div>
        </div>
    </div>
}
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function CheckStudioExits() {
            var studioCode = $("#CheckStudioValue").val();
            $.ajax({
                url: '/SysAdmin/SysAdmin/GetStudioWithCode',
                type: 'POST',
                dataType: 'json',
                data: {
                    code: studioCode
                },
                success: function (response) {
                    if (response.status) {
                        $("#btnCheck").notify("Mã này đã tồn tại", "error",
                            {
                                position: "right"
                            });

                    } else {
                        $("#btnCheck").notify("Mã này chưa tồn tại", "success",
                            {
                                position: "right"
                            });
                    }
                }

            });
        }
    </script>

}